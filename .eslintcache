[{"D:\\infostretch_shopmart\\shopping_mart\\src\\index.js":"1","D:\\infostretch_shopmart\\shopping_mart\\src\\reportWebVitals.js":"2","D:\\infostretch_shopmart\\shopping_mart\\src\\App.js":"3","D:\\infostretch_shopmart\\shopping_mart\\src\\services\\auth.service.js":"4","D:\\infostretch_shopmart\\shopping_mart\\src\\services\\user.service.js":"5","D:\\infostretch_shopmart\\shopping_mart\\src\\services\\auth-header.js":"6","D:\\infostretch_shopmart\\shopping_mart\\src\\Components\\Register.js":"7","D:\\infostretch_shopmart\\shopping_mart\\src\\Components\\Home.js":"8","D:\\infostretch_shopmart\\shopping_mart\\src\\Components\\Login.js":"9","D:\\infostretch_shopmart\\shopping_mart\\src\\Components\\BoardManager.js":"10","D:\\infostretch_shopmart\\shopping_mart\\src\\Components\\Profile.js":"11","D:\\infostretch_shopmart\\shopping_mart\\src\\Components\\BoardAdmin.js":"12","D:\\infostretch_shopmart\\shopping_mart\\src\\Components\\BoardSupplier.js":"13","D:\\infostretch_shopmart\\shopping_mart\\src\\Components\\BoardUser.js":"14","D:\\infostretch_shopmart\\shopping_mart\\src\\Components\\Product.js":"15","D:\\infostretch_shopmart\\shopping_mart\\src\\Components\\MenuContainer.js":"16","D:\\infostretch_shopmart\\shopping_mart\\src\\Components\\ProductComponent\\AddProduct.js":"17","D:\\infostretch_shopmart\\shopping_mart\\src\\Components\\ProductComponent\\UpdateProduct.js":"18","D:\\infostretch_shopmart\\shopping_mart\\src\\Components\\ProductComponent\\DeleteProduct.js":"19","D:\\infostretch_shopmart\\shopping_mart\\src\\Components\\ProductComponent\\GetProduct.js":"20","D:\\infostretch_shopmart\\shopping_mart\\src\\Components\\Cart.js":"21","D:\\infostretch_shopmart\\shopping_mart\\src\\Components\\CartTable.js":"22","D:\\infostretch_shopmart\\shopping_mart\\src\\Components\\OrderComponent\\AddAddress.js":"23","D:\\infostretch_shopmart\\shopping_mart\\src\\Components\\OrderComponent\\Ordersummary.js":"24","D:\\infostretch_shopmart\\shopping_mart\\src\\Components\\OrderComponent\\OrderSummary.js":"25","D:\\infostretch_shopmart\\shopping_mart\\src\\Components\\OrderComponent\\SelectAddress.js":"26","D:\\infostretch_shopmart\\shopping_mart\\src\\Components\\OrderSummaryTable.js":"27","D:\\infostretch_shopmart\\shopping_mart\\src\\Components\\OrderComponent\\OrderConfirmed.js":"28","D:\\infostretch_shopmart\\shopping_mart\\src\\Components\\ApprovalComponent\\RequestTable.js":"29","D:\\infostretch_shopmart\\shopping_mart\\src\\Components\\ApprovalComponent\\TablePendingRequest.js":"30","D:\\infostretch_shopmart\\shopping_mart\\src\\Components\\SignUpAsSupplier.js":"31"},{"size":544,"mtime":1608727543339,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":499162500000,"results":"34","hashOfConfig":"33"},{"size":6128,"mtime":1610007894921,"results":"35","hashOfConfig":"33"},{"size":1250,"mtime":1609839919672,"results":"36","hashOfConfig":"33"},{"size":5031,"mtime":1610017216767,"results":"37","hashOfConfig":"33"},{"size":343,"mtime":1609502205065,"results":"38","hashOfConfig":"33"},{"size":6769,"mtime":1609147204691,"results":"39","hashOfConfig":"33"},{"size":4208,"mtime":1610010906917,"results":"40","hashOfConfig":"33"},{"size":3632,"mtime":1610003198962,"results":"41","hashOfConfig":"33"},{"size":3775,"mtime":1610006957114,"results":"42","hashOfConfig":"33"},{"size":1928,"mtime":1609502789612,"results":"43","hashOfConfig":"33"},{"size":2792,"mtime":1610025233215,"results":"44","hashOfConfig":"33"},{"size":992,"mtime":1610025230442,"results":"45","hashOfConfig":"33"},{"size":739,"mtime":1608126184094,"results":"46","hashOfConfig":"33"},{"size":3918,"mtime":1610012311022,"results":"47","hashOfConfig":"33"},{"size":2047,"mtime":1608790572409,"results":"48","hashOfConfig":"33"},{"size":7119,"mtime":1609756127181,"results":"49","hashOfConfig":"33"},{"size":9240,"mtime":1608623974174,"results":"50","hashOfConfig":"33"},{"size":3742,"mtime":1608274935006,"results":"51","hashOfConfig":"33"},{"size":5801,"mtime":1609155750300,"results":"52","hashOfConfig":"33"},{"size":5116,"mtime":1610013788990,"results":"53","hashOfConfig":"33"},{"size":2511,"mtime":1609318786301,"results":"54","hashOfConfig":"33"},{"size":7839,"mtime":1609759714416,"results":"55","hashOfConfig":"33"},{"size":1237,"mtime":1609166060908,"results":"56","hashOfConfig":"33"},{"size":1291,"mtime":1609319615502,"results":"57","hashOfConfig":"33"},{"size":2803,"mtime":1609500482134,"results":"58","hashOfConfig":"33"},{"size":418,"mtime":1609774606886,"results":"59","hashOfConfig":"33"},{"size":2072,"mtime":1610020384979,"results":"60","hashOfConfig":"33"},{"size":1398,"mtime":1610006031270,"results":"61","hashOfConfig":"33"},{"size":3388,"mtime":1610007838977,"results":"62","hashOfConfig":"33"},{"size":1437,"mtime":1609931294693,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"etj65x",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"66"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"D:\\infostretch_shopmart\\shopping_mart\\src\\index.js",[],["140","141"],"D:\\infostretch_shopmart\\shopping_mart\\src\\reportWebVitals.js",[],"D:\\infostretch_shopmart\\shopping_mart\\src\\App.js",[],"D:\\infostretch_shopmart\\shopping_mart\\src\\services\\auth.service.js",[],"D:\\infostretch_shopmart\\shopping_mart\\src\\services\\user.service.js",[],"D:\\infostretch_shopmart\\shopping_mart\\src\\services\\auth-header.js",[],"D:\\infostretch_shopmart\\shopping_mart\\src\\Components\\Register.js",[],"D:\\infostretch_shopmart\\shopping_mart\\src\\Components\\Home.js",["142","143"],"import React, { useState, useEffect } from \"react\";\nimport Input from \"react-validation/build/input\";\nimport Form from \"react-validation/build/form\";\n\nimport UserService from \"../services/user.service\";\nimport SimpleImageSlider from \"react-simple-image-slider\";\nimport Product from \"./Product\";\n\nlet folderName = \"sliderimages/\";\nconst images = [\n  { url: folderName + \"fruits.jpg\" },\n  { url: folderName + \"grocery.jpg\" },\n  { url: folderName + \"dairy.jpg\" },\n  { url: folderName + \"slider.jpg\" },\n  { url: folderName + \"slider2.jpg\" },\n  { url: folderName + \"slider3.jpg\" },\n];\n\nfunction Home() {\n  const [content, setContent] = useState(\"\");\n\n  const [products, setProducts] = useState([]);\n\n  const [inputSearchValue, setinputSearchValue] = useState(\"\");\n\n  const [filterFlag, setfilterFlag] = useState();\n\n  let [filteredProducts, setFilteredProducts] = useState([]);\n\n  useEffect(() => {\n    UserService.getProducts()\n      .then((response) => {\n        setProducts(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n        setContent(\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n            error.message ||\n            error.toString()\n        );\n      });\n  }, []);\n\n  const onChangeSearchBar = (e) => {\n    setinputSearchValue(e.target.value);\n  };\n\n  const filterSubmitHandler = (e) => {\n    e.preventDefault();\n    console.log(\"on change search bar value is \" + inputSearchValue);\n    setFilteredProducts(\n      products.filter((product) => {\n        return product.productname\n          .toLowerCase()\n          .includes(inputSearchValue.toLowerCase());\n      })\n    );\n\n    console.log(\"filteredItems\" + filteredProducts);\n    setfilterFlag(true);\n    if (inputSearchValue === \"\") {\n      console.log(\"inside false if\");\n      setfilterFlag(false);\n    }\n  };\n\n  return (\n    <div className=\"jumbotron\">\n      <div>\n        <SimpleImageSlider\n          showNavs=\"true\"\n          showBullets=\"true\"\n          width={1050}\n          height={350}\n          images={images}\n          slideDuration={1.0}\n        />\n      </div>\n      <br></br>\n      <form onSubmit={filterSubmitHandler}>\n        <div class=\"form-inline\">\n          <div class=\"form-group mb-2\">\n            <label class=\"form-control-plaintext\">\n              <b>Search by Name</b>\n            </label>\n          </div>\n          <div class=\"form-group mx-sm-3 mb-2\">\n            <input\n              onChange={onChangeSearchBar}\n              className=\"form-control\"\n              for=\"search\"\n              type=\"text\"\n            />\n          </div>\n          <br></br>\n          <button type=\"submit\" class=\"btn btn-primary mb-2\">\n            search\n          </button>\n        </div>\n      </form>\n      <div className=\"products\">\n        {!filterFlag ? (\n          products.length ? (\n            products.map((product) => (\n              <Product\n                key={product.id}\n                productId={product.id}\n                productname={product.productname}\n                brand={product.brand}\n                imageFileName={product.imageFileName}\n                price={product.price}\n                description={product.description}\n                originalQuantity={product.quantity}\n              />\n            ))\n          ) : (\n            <div className=\"jumbotron\">\n              <h1>NO products found</h1>\n            </div>\n          )\n        ) : filteredProducts.length ? (\n          filteredProducts.map((product) => (\n            <Product\n              key={product.id}\n              productId={product.id}\n              productname={product.productname}\n              brand={product.brand}\n              imageFileName={product.imageFileName}\n              price={product.price}\n              description={product.description}\n              originalQuantity={product.quantity}\n            />\n          ))\n        ) : (\n          <div className=\"jumbotron\">\n            {console.log(filteredProducts)}\n            <h1>filtered product not available</h1>\n            <h1>NO products found</h1>\n          </div>\n        )}\n\n        {content.message}\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","D:\\infostretch_shopmart\\shopping_mart\\src\\Components\\Login.js",["144","145"],"import React, { useState } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport { useHistory } from \"react-router-dom\";\n\nimport AuthService from \"../services/auth.service\";\n\nfunction Login() {\n  const [loginDetails, setLoginDetails] = useState({\n    username: \"\",\n    password: \"\",\n    loading: false,\n    message: \"\",\n  });\n\n  const [form, setForm] = useState();\n  const [checkBtn, setCheckBtn] = useState();\n  const history = useHistory();\n  const required = (value) => {\n    if (!value) {\n      return (\n        <div className=\"alert alert-danger\" role=\"alert\">\n          This field is required!\n        </div>\n      );\n    }\n  };\n\n  const onChangeUsername = (e) => {\n    setLoginDetails({ ...loginDetails, username: e.target.value });\n  };\n\n  const onChangePassword = (e) => {\n    setLoginDetails({ ...loginDetails, password: e.target.value });\n  };\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n\n    setLoginDetails({ ...loginDetails, message: \"\", loading: true });\n\n    //this.form.validateAll();\n\n    if (checkBtn.context._errors.length === 0) {\n      AuthService.login(loginDetails.username, loginDetails.password).then(\n        () => {\n          history.push(\"/profile\");\n          window.location.reload();\n        },\n        (error) => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          setLoginDetails({\n            loading: false,\n            message: resMessage,\n          });\n        }\n      );\n    } else {\n      setLoginDetails({\n        loading: false,\n      });\n    }\n  };\n\n  return (\n    <div className=\"col-md-12\">\n      <div className=\"card card-container\">\n        <img\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n          alt=\"profile-img\"\n          className=\"profile-img-card\"\n        />\n\n        <Form onSubmit={handleLogin}>\n          <div className=\"form-group\">\n            <label htmlFor=\"username\">Username</label>\n            <Input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"username\"\n              value={loginDetails.username}\n              onChange={onChangeUsername}\n              validations={[required]}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password</label>\n            <Input\n              type=\"password\"\n              className=\"form-control\"\n              name=\"password\"\n              value={loginDetails.password}\n              onChange={onChangePassword}\n              validations={[required]}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <button\n              className=\"btn btn-primary btn-block\"\n              disabled={loginDetails.loading}\n            >\n              {loginDetails.loading && (\n                <span className=\"spinner-border spinner-border-sm\"></span>\n              )}\n              <span>Login</span>\n            </button>\n          </div>\n\n          {loginDetails.message && (\n            <div className=\"form-group\">\n              <div className=\"alert alert-danger\" role=\"alert\">\n                {loginDetails.message}\n              </div>\n            </div>\n          )}\n          <CheckButton\n            style={{ display: \"none\" }}\n            ref={(c) => {\n              setCheckBtn(c);\n            }}\n          />\n        </Form>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","D:\\infostretch_shopmart\\shopping_mart\\src\\Components\\BoardManager.js",["146","147","148"],"import React, { useState, useEffect } from \"react\";\nimport authService from \"../services/auth.service\";\nimport userService from \"../services/user.service\";\n\nfunction BoardManager() {\n  const [requests, setrequests] = useState([]);\n\n  useEffect(() => {\n    console.log(\n      \"use effect data\" + localStorage.getItem(\"requestedSupplierId\")\n    );\n    setrequests(JSON.parse(localStorage.getItem(\"requestedSupplierId\")) || []);\n  }, []);\n\n  return (\n    <div className=\"jumbotron\">\n      <h3>Supplier updating product quantity request</h3>\n      {console.log(\"The data before sending to child\" + requests)}\n\n      {requests.length ? (\n        <table>\n          {requests.map((product) => (\n            <SupplieRequest key={product.supplierId} request={product} />\n          ))}\n        </table>\n      ) : (\n        <h2>no pending requests</h2>\n      )}\n    </div>\n  );\n}\n\nexport default BoardManager;\n\nconst SupplieRequest = (props) => {\n  const [succesful, setsuccesful] = useState();\n  const [isDiclined, setIsDeclined] = useState();\n\n  console.log(\"The data which was stored\" + props.request);\n\n  const approveHandler = () => {\n    let cartItems = JSON.parse(localStorage.getItem(\"requestedSupplierId\"));\n\n    userService\n      .addQuantityForProduct(props.request.productId, props.request.newQuant)\n      .then((res) => {\n        userService\n          .deletePendingRequest(props.request.requestId)\n          .then((res) => {\n            for (let i = 0; i < cartItems.length; i++) {\n              if (props.request.productId == cartItems[i].productId) {\n                var index = cartItems.indexOf(cartItems[i]);\n                cartItems.splice(index, 1);\n                localStorage.setItem(\n                  \"requestedSupplierId\",\n                  JSON.stringify(cartItems)\n                );\n                break;\n              }\n            }\n\n            setsuccesful(true);\n          })\n          .catch((err) => console.log(err));\n      });\n  };\n\n  const declinHandler = () => {\n    let cartItems = JSON.parse(localStorage.getItem(\"requestedSupplierId\"));\n\n    userService\n      .deletePendingRequest(props.request.requestId)\n      .then((res) => {\n        for (let i = 0; i < cartItems.length; i++) {\n          if (props.request.productId == cartItems[i].productId) {\n            var index = cartItems.indexOf(cartItems[i]);\n            cartItems.splice(index, 1);\n            localStorage.setItem(\n              \"requestedSupplierId\",\n              JSON.stringify(cartItems)\n            );\n            break;\n          }\n        }\n\n        setIsDeclined(true);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <>\n      <tr key={props.key}>\n        <td>\n          <p1>\n            Supplier Id: <b>{props.request.supplierId}</b> is requested for\n            Updating quantity\n          </p1>\n        </td>\n        <td>\n          productId: <b> {props.request.productId}</b>\n        </td>\n        <td>\n          Quantity by: <b>{props.request.newQuant}</b>\n        </td>\n        <td>\n          <button\n            onClick={approveHandler}\n            class=\"btn btn-success btn-lg float-right\"\n          >\n            approve\n          </button>\n        </td>\n        <td>\n          <button\n            onClick={declinHandler}\n            class=\"btn btn-danger btn-lg float-right\"\n          >\n            decline\n          </button>\n        </td>\n        {succesful ? (\n          <span className=\"alert alert-success\" role=\"alert\">\n            Request approved\n            {window.location.reload()}\n          </span>\n        ) : isDiclined ? (\n          <span className=\"alert alert-danger\" role=\"alert\">\n            Request Declined\n            {window.location.reload()}\n          </span>\n        ) : null}\n      </tr>\n    </>\n  );\n};\n","D:\\infostretch_shopmart\\shopping_mart\\src\\Components\\Profile.js",["149"],"import React, { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport AuthService from \"../services/auth.service\";\n\nfunction Profile() {\n  const [profileDetails, setProfileDetails] = useState({\n    redirect: null,\n    userReady: false,\n    currentUser: { username: \"\" },\n  });\n\n  useEffect(() => {\n    const currentUser = AuthService.getCurrentUser();\n\n    if (!currentUser)\n      setProfileDetails({ ...profileDetails, redirect: \"/home\" });\n    setProfileDetails({\n      ...profileDetails,\n      currentUser: currentUser,\n      userReady: true,\n    });\n  }, []);\n\n  if (profileDetails.redirect) {\n    return <Redirect to={profileDetails.redirect} />;\n  }\n\n  const { currentUser } = profileDetails;\n\n  return (\n    <div className=\"container\">\n      {profileDetails.userReady ? (\n        <div>\n          <header className=\"jumbotron\">\n            <h3>\n              Username: <strong>{currentUser.username}</strong>\n            </h3>\n            {currentUser.id}\n            <p>\n              <strong>Token:</strong> {currentUser.accessToken.substring(0, 20)}\n              {currentUser.accessToken.substr(\n                currentUser.accessToken.length - 20\n              )}\n            </p>\n            <p>\n              <strong>Id:</strong> {currentUser.id}\n            </p>\n            <p>\n              <strong>FirstName:</strong> {currentUser.firstname}\n            </p>\n            <p>\n              <strong>LastName:</strong> {currentUser.lastname}\n            </p>\n            <p>\n              <strong>Email:</strong> {currentUser.email}\n            </p>\n            <strong>Authorities:</strong>\n            <ul>\n              {currentUser.roles &&\n                currentUser.roles.map((role, index) => (\n                  <li key={index}>{role}</li>\n                ))}\n            </ul>\n          </header>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default Profile;\n","D:\\infostretch_shopmart\\shopping_mart\\src\\Components\\BoardAdmin.js",["150","151","152","153","154","155"],"D:\\infostretch_shopmart\\shopping_mart\\src\\Components\\BoardSupplier.js",[],"D:\\infostretch_shopmart\\shopping_mart\\src\\Components\\BoardUser.js",[],"D:\\infostretch_shopmart\\shopping_mart\\src\\Components\\Product.js",["156","157","158","159","160"],"import React, { useState } from \"react\";\r\nimport authService from \"../services/auth.service\";\r\nimport userService from \"../services/user.service\";\r\nimport style from \"./../recipe.module.css\";\r\n\r\nlet id = 0;\r\n\r\nconst Product = ({\r\n  productId,\r\n  productname,\r\n  brand,\r\n  price,\r\n  description,\r\n  imageFileName,\r\n  originalQuantity,\r\n}) => {\r\n  const [addedProduct, setaddedProduct] = useState({});\r\n  const [successful, setsuccessful] = useState();\r\n  const [quantity, setquantity] = useState(1);\r\n  let list = [];\r\n  const addtocartHandler = () => {\r\n    if (authService.isUserLoggedIn() == \"true\") {\r\n      const userId = authService.getCurrentUser().id;\r\n      userService\r\n        .addToKart(userId, productname, brand, productId, price, quantity)\r\n        .then((response) => {\r\n          setaddedProduct(response.data);\r\n          setsuccessful(true);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          setsuccessful(false);\r\n          setaddedProduct(\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n              error.message ||\r\n              error.toString()\r\n          );\r\n        });\r\n    } else {\r\n      addProductToCart();\r\n    }\r\n  };\r\n\r\n  function generateRequest(productId) {\r\n    userService.addAdminRestockRequest(productId);\r\n  }\r\n\r\n  function addProductToCart() {\r\n    list = JSON.parse(localStorage.getItem(\"cartItems\")) || [];\r\n\r\n    if (list.length !== 0) {\r\n      for (let i = 0; i < list.length; i++) {\r\n        if (list[i].productname === productname) {\r\n          setaddedProduct({ message: \"Already added to Cart\" });\r\n          setsuccessful(true);\r\n          return;\r\n        }\r\n      }\r\n      if (!successful) {\r\n        id = list.length + 1;\r\n        list.push({ id, productname, brand, productId, price, quantity });\r\n        localStorage.setItem(\"cartItems\", JSON.stringify(list));\r\n        setaddedProduct({ message: \"Added to Cart\" });\r\n        setsuccessful(true);\r\n      }\r\n    }\r\n    if (list.length == 0) {\r\n      id = id + 1;\r\n      list.push({ id, productname, brand, productId, price, quantity });\r\n      localStorage.setItem(\"cartItems\", JSON.stringify(list));\r\n      setaddedProduct({ message: \"Added to Cart\" });\r\n      setsuccessful(true);\r\n    }\r\n  }\r\n  let imageFilePath = `./productimages/${imageFileName}`;\r\n  return (\r\n    <div className={style.product}>\r\n      {originalQuantity >= 1 ? (\r\n        <div>\r\n          <img className={style.images} src={imageFilePath} alt=\"no image\" />\r\n          <h2>\r\n            {brand} {productname}\r\n          </h2>\r\n          <h3>{price} &#8377;</h3>\r\n\r\n          <p>{description}</p>\r\n          {!successful ? (\r\n            <button\r\n              className=\"alert alert-success\"\r\n              key={productId}\r\n              onClick={addtocartHandler}\r\n            >\r\n              Add to cart\r\n            </button>\r\n          ) : null}\r\n          {successful ? (\r\n            <p\r\n              className={\r\n                successful ? \"alert alert-success\" : \"alert alert-danger\"\r\n              }\r\n              role=\"alert\"\r\n            >\r\n              {addedProduct.message}\r\n            </p>\r\n          ) : null}\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <img\r\n            className={style.bluredImages}\r\n            src={imageFilePath}\r\n            alt=\"no image\"\r\n          />\r\n          <h2 className=\"productName\">\r\n            {productname} {brand}\r\n          </h2>\r\n          <h3> &#8377; {price}</h3>\r\n\r\n          <p>{description}</p>\r\n          {generateRequest(productId)}\r\n          {!successful ? (\r\n            <button\r\n              className=\"alert alert-danger\"\r\n              disabled=\"true\"\r\n              key={productId}\r\n            >\r\n              Out Of Stock\r\n            </button>\r\n          ) : null}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","D:\\infostretch_shopmart\\shopping_mart\\src\\Components\\MenuContainer.js",["161","162"],"import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst menuItemsOptions = [\r\n  { text: \"Add Product\" },\r\n  { text: \"Get Product\" },\r\n  { text: \"Update Product\" },\r\n  { text: \"Delete Product\" },\r\n];\r\n\r\nfunction MenuContainer() {\r\n  const [activeItem, setActiveItem] = React.useState(\"\");\r\n  const [activeItemPos, setActiveItemPos] = React.useState(0);\r\n  const [activeItemColor, setActiveItemColor] = React.useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const createClickHandler = (activeItem) => (e) => {\r\n    e.preventDefault();\r\n\r\n    setActiveItem(activeItem);\r\n    setActiveItemPos(document.getElementById(activeItem).offsetTop);\r\n    setActiveItemColor(\r\n      window\r\n        .getComputedStyle(document.getElementById(activeItem))\r\n        .getPropertyValue(\"background-color\")\r\n    );\r\n    switch (activeItem) {\r\n      case \"Add Product\":\r\n        history.push(\"/addProduct\");\r\n        window.location.reload();\r\n        break;\r\n      case \"Update Product\":\r\n        history.push(\"/updateProduct\");\r\n        window.location.reload();\r\n        break;\r\n      case \"Delete Product\":\r\n        history.push(\"/deleteProduct\");\r\n        window.location.reload();\r\n        break;\r\n      case \"Get Product\":\r\n        history.push(\"/getProduct\");\r\n        window.location.reload();\r\n        break;\r\n    }\r\n  };\r\n\r\n  const menuItems = menuItemsOptions.map((item) => (\r\n    <MenuItem item={item} createClickHandler={createClickHandler} />\r\n  ));\r\n\r\n  return (\r\n    <div className=\"menu-container\">\r\n      <span\r\n        className=\"menu-item--active\"\r\n        style={{ top: activeItemPos, backgroundColor: activeItemColor }}\r\n      />\r\n      {menuItems}\r\n    </div>\r\n  );\r\n}\r\n\r\n///////////////////\r\n// MenuItem      //\r\n///////////////////\r\nfunction MenuItem({ createClickHandler, item }) {\r\n  const clickHandler = createClickHandler(item.text);\r\n\r\n  return (\r\n    <div className=\"menu-item\" id={item.text} onClick={clickHandler}>\r\n      {item.text.toUpperCase()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MenuContainer;\r\n","D:\\infostretch_shopmart\\shopping_mart\\src\\Components\\ProductComponent\\AddProduct.js",[],"D:\\infostretch_shopmart\\shopping_mart\\src\\Components\\ProductComponent\\UpdateProduct.js",[],"D:\\infostretch_shopmart\\shopping_mart\\src\\Components\\ProductComponent\\DeleteProduct.js",[],"D:\\infostretch_shopmart\\shopping_mart\\src\\Components\\ProductComponent\\GetProduct.js",[],"D:\\infostretch_shopmart\\shopping_mart\\src\\Components\\Cart.js",["163","164","165","166"],"import React, { useState, useEffect } from \"react\";\r\nimport userService from \"../services/user.service\";\r\nimport CartTable from \"./CartTable\";\r\n\r\nimport \"./../Table.css\";\r\nimport authService from \"../services/auth.service\";\r\n\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport OrderSummaryTable from \"./OrderSummaryTable\";\r\n\r\nfunction Cart(props) {\r\n  const [products, setproducts] = useState([]);\r\n  const [grandTotalPrice, setGrandTotalPrice] = useState([]);\r\n  const history = useHistory();\r\n\r\n  const addressId = props.addressId;\r\n\r\n  let Price = 0;\r\n  const getTotalPrice = (price) => {\r\n    Price = Price + price;\r\n    setGrandTotalPrice(Price);\r\n    sessionStorage.setItem(\"grandTotal\", Price);\r\n  };\r\n\r\n  const checkOutHandler = () => {\r\n    if (authService.isUserLoggedIn() == \"true\") {\r\n      history.push(\"/ordersummary\");\r\n      window.location.reload();\r\n    } else {\r\n      history.push(\"/login\");\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  const goToHomeHandler = () => {\r\n    history.push(\"/\");\r\n    window.location.reload();\r\n  };\r\n\r\n  const placeOrderHandler = () => {\r\n    products.map((product) => {\r\n      userService\r\n        .placeOrder(\r\n          product.productId,\r\n          product.quantity,\r\n          addressId,\r\n          product.price,\r\n          product.userId\r\n        )\r\n        .then(\r\n          console.log(\"Product ordered quantity\" + product.quantity),\r\n          console.log(product),\r\n          userService.reduceQuantityForProduct(\r\n            product.productId,\r\n            product.quantity\r\n          ),\r\n\r\n          userService\r\n            .EmptyCartForCurrentUser()\r\n            .then()\r\n            .catch((err) => {\r\n              console.log(err);\r\n            })\r\n        );\r\n    });\r\n    history.push(\"/ordersuccess\");\r\n    window.location.reload();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (authService.isUserLoggedIn() == \"true\") {\r\n      userService\r\n        .getCartProducts()\r\n        .then((response) => {\r\n          console.log(response.data);\r\n          setproducts(response.data);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      setproducts(JSON.parse(localStorage.getItem(\"cartItems\")) || []);\r\n    }\r\n  }, []);\r\n  let imageFilePath = `./productimages/noItemsFound.jpg`;\r\n\r\n  return (\r\n    <div className=\"jumbotron\">\r\n      {props.readOnly ? (\r\n        <div>\r\n          <h2>Order deatils</h2>\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <td>Sl No</td>\r\n                <td>Product Name</td>\r\n                <td>Brand</td>\r\n                <td>Price</td>\r\n                <td>quantity</td>\r\n                <td>Total</td>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <OrderSummaryTable\r\n                  key={product.id}\r\n                  cartId={product.id}\r\n                  productname={product.productname}\r\n                  brand={product.brand}\r\n                  quantity={product.quantity}\r\n                  price={product.price}\r\n                />\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n\r\n          <h3>Grand total: {sessionStorage.getItem(\"grandTotal\")} &#8377;</h3>\r\n\r\n          <button\r\n            onClick={placeOrderHandler}\r\n            class=\"btn btn-success btn-lg float-right\"\r\n            type=\"submit\"\r\n          >\r\n            placeOrder\r\n          </button>\r\n        </div>\r\n      ) : products.length ? (\r\n        <div>\r\n          <h2>Cart Items</h2>\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <td>Sl No</td>\r\n                <td>Product Name</td>\r\n                <td>Brand</td>\r\n                <td>Price</td>\r\n                <td>quantity</td>\r\n                <td>Total</td>\r\n                <td>items</td>\r\n                <td>Remove</td>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <CartTable\r\n                  key={product.id}\r\n                  cartId={product.id}\r\n                  productname={product.productname}\r\n                  brand={product.brand}\r\n                  quantity={product.quantity}\r\n                  price={product.price}\r\n                  handleChange={getTotalPrice}\r\n                />\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n\r\n          <h3>Grand total:{grandTotalPrice} &#8377;</h3>\r\n\r\n          <button\r\n            onClick={checkOutHandler}\r\n            class=\"btn btn-success btn-lg float-right\"\r\n            type=\"submit\"\r\n          >\r\n            Check Out\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"jumbotron\">\r\n          <img src={imageFilePath} alt=\"NO PRODIUCTS EMPTY CART\"></img>\r\n          <button\r\n            onClick={goToHomeHandler}\r\n            class=\"btn btn-success btn-lg float-center\"\r\n            type=\"submit\"\r\n          >\r\n            Continue Shopping\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cart;\r\n","D:\\infostretch_shopmart\\shopping_mart\\src\\Components\\CartTable.js",["167","168","169"],"import React, { useState } from \"react\";\r\nimport authService from \"../services/auth.service\";\r\nimport userService from \"../services/user.service\";\r\n\r\nimport \"./../Table.css\";\r\n\r\nconst CartTable = (props) => {\r\n  const [quant, setquant] = useState(props.quantity);\r\n\r\n  const delteItemHandler = () => {\r\n    if (authService.isUserLoggedIn() == \"true\") {\r\n      userService\r\n        .deleteCartItem(props.cartId)\r\n        .then((res) => {\r\n          window.location.reload(false);\r\n        })\r\n        .catch((error) => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n        });\r\n    } else {\r\n      let cartItems = JSON.parse(localStorage.getItem(\"cartItems\"));\r\n\r\n      for (let i = 0; i < cartItems.length; i++) {\r\n        if (props.productname === cartItems[i].productname) {\r\n          var index = cartItems.indexOf(cartItems[i]);\r\n          cartItems.splice(index, 1);\r\n          localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\r\n          break;\r\n        }\r\n      }\r\n\r\n      window.location.reload(false);\r\n    }\r\n  };\r\n\r\n  const incrementQuantity = () => {\r\n    if (quant < 10) {\r\n      setquant(quant + 1);\r\n    }\r\n  };\r\n\r\n  const decrementQuantity = () => {\r\n    if (quant < 2) {\r\n      delteItemHandler();\r\n    } else {\r\n      setquant(quant - 1);\r\n    }\r\n  };\r\n\r\n  const updateTotal = () => {\r\n    userService.updateCartQuantity(quant, props.cartId);\r\n    props.handleChange(props.price * quant);\r\n  };\r\n\r\n  const updateQuantity = () => {\r\n    props.handleQuantity(quant);\r\n  };\r\n\r\n  return (\r\n    <tr key={props.cartId}>\r\n      <td>{props.cartId}</td>\r\n      <td>{props.productname}</td>\r\n      <td>{props.brand}</td>\r\n      <td>{props.price}</td>\r\n      <td>{quant}</td>\r\n      <td className=\"product-total-amount\">\r\n        <input\r\n          readOnly\r\n          onChange={updateTotal(quant * props.price)}\r\n          value={props.price * quant}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        <button className=\"btn btn-primary\" onClick={incrementQuantity}>\r\n          +\r\n        </button>\r\n\r\n        <b>{quant}</b>\r\n        <button className=\"btn btn-primary\" onClick={decrementQuantity}>\r\n          -\r\n        </button>\r\n      </td>\r\n      <td>\r\n        <button key={props.cartId} onClick={delteItemHandler}>\r\n          removeItem\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default CartTable;\r\n","D:\\infostretch_shopmart\\shopping_mart\\src\\Components\\OrderComponent\\AddAddress.js",[],"D:\\infostretch_shopmart\\shopping_mart\\src\\Components\\OrderComponent\\Ordersummary.js",["170"],"D:\\infostretch_shopmart\\shopping_mart\\src\\Components\\OrderComponent\\OrderSummary.js",["171"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport userService from \"../../services/user.service\";\r\nimport Cart from \"../Cart\";\r\nfunction OrderSummary() {\r\n  const [addresses, setaddresses] = useState([]);\r\n\r\n  useEffect(() => {\r\n    userService\r\n      .getUserAddresses()\r\n      .then((res) => setaddresses(res.data))\r\n      .catch();\r\n  }, []);\r\n\r\n  const rid = localStorage.getItem(\"addressId\");\r\n\r\n  return (\r\n    <div className=\"jumbotron\">\r\n      <input type=\"radio\" value=\"selectedAddress\" name=\"address\" checked />\r\n      {addresses.map((add) =>\r\n        add.id == rid ? (\r\n          <p>\r\n            {\" \"}\r\n            {add.firstname} {add.lastname},<br /> {add.address},<br />\r\n            {add.pincode}\r\n            <br />\r\n            mobileNumber: {add.mobileNumber}\r\n            <br />\r\n            alternate ContactNumber: {add.alternateContactNumber}\r\n          </p>\r\n        ) : null\r\n      )}\r\n\r\n      <Link to=\"/ordersummary/selectAddress\">\r\n        Select different address from existing\r\n      </Link>\r\n      <br />\r\n      <Link to=\"/ordersummary/addAddress\">Add New address</Link>\r\n      <br />\r\n      <br />\r\n\r\n      <Cart readOnly=\"true\" addressId={rid}></Cart>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderSummary;\r\n","D:\\infostretch_shopmart\\shopping_mart\\src\\Components\\OrderComponent\\SelectAddress.js",["172","173","174","175"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport userService from \"../../services/user.service\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction SelectAddress() {\r\n  const [addresses, setaddresses] = useState([]);\r\n  const [setAddress, setsetAddress] = useState();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    userService\r\n      .getUserAddresses()\r\n      .then((response) => {\r\n        setaddresses(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch((error) => {\r\n        const resMessage =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n      });\r\n  }, []);\r\n\r\n  const addressSelectorHandler = (id) => {\r\n    console.log(\"Parent property\" + id);\r\n    setsetAddress(id);\r\n    localStorage.setItem(\"addressId\", id);\r\n  };\r\n\r\n  return (\r\n    <div className=\"jumbotron\">\r\n      {addresses.length ? (\r\n        <div>\r\n          <h2>Please select the Required Address</h2>\r\n          <table className=\"table\">\r\n            <tbody>\r\n              {addresses.map((address) => (\r\n                <AddressTable\r\n                  id={address.id}\r\n                  firstname={address.firstname}\r\n                  lastname={address.lastname}\r\n                  useraddress={address.address}\r\n                  pincode={address.pincode}\r\n                  mobileNumber={address.mobileNumber}\r\n                  alternateContactNumber={address.alternateContactNumber}\r\n                  addressSelector={addressSelectorHandler}\r\n                ></AddressTable>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n          <button onClick={() => history.goBack()}>SELECT ADDRESS</button>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <h1>Unable to find any addres please add new address</h1>\r\n          <Link to=\"/ordersummary/addAddress\">Add new Address</Link>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelectAddress;\r\n\r\nconst AddressTable = (props) => {\r\n  const [selectedAddress, setselectedAddress] = useState({});\r\n\r\n  const radioButtonHandler = () => {\r\n    console.log(\"child prop id\" + props.id);\r\n    props.addressSelector(props.id);\r\n  };\r\n\r\n  return (\r\n    <tr key={props.id} for={props.id}>\r\n      <td>\r\n        <input\r\n          onChange={radioButtonHandler}\r\n          type=\"radio\"\r\n          value={props.id}\r\n          id={props.id}\r\n        />\r\n        {props.firstname} {props.lastname},<br /> {props.useraddress},<br />\r\n        {props.pincode}\r\n        <br />\r\n        mobileNumber: {props.mobileNumber}\r\n        <br />\r\n        alternate ContactNumber: {props.alternateContactNumber}\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n","D:\\infostretch_shopmart\\shopping_mart\\src\\Components\\OrderSummaryTable.js",["176"],"import React, { useState } from \"react\";\r\n\r\nimport \"./../Table.css\";\r\n\r\nconst OrderSummaryTable = (props) => {\r\n  return (\r\n    <tr key={props.cartId}>\r\n      <td>{props.cartId}</td>\r\n      <td>{props.productname}</td>\r\n      <td>{props.brand}</td>\r\n      <td>{props.price}</td>\r\n      <td>{props.quantity}</td>\r\n      <td>{props.price * props.quantity}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default OrderSummaryTable;\r\n","D:\\infostretch_shopmart\\shopping_mart\\src\\Components\\OrderComponent\\OrderConfirmed.js",["177"],"import React, { useEffect, useState } from \"react\";\r\nimport authService from \"../../services/auth.service\";\r\nimport userService from \"../../services/user.service\";\r\n\r\nfunction OrderConfirmed() {\r\n  const [products, setproducts] = useState([]);\r\n  const [address, setaddress] = useState({});\r\n\r\n  useEffect(() => {\r\n    userService.getMyOrders().then((response) => {\r\n      setproducts(response.data);\r\n      setaddress(response.data[0].address);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"jumbotron\">\r\n      <h3>Thank you for shopping with us!</h3>\r\n      <h2> Order placed successfully</h2>\r\n\r\n      <h4>Address:</h4>\r\n      <p>\r\n        {address.firstname} {address.lastname},<br /> {address.address},<br />\r\n        {address.pincode}\r\n        <br />\r\n        mobileNumber: {address.mobileNumber}\r\n        <br />\r\n        alternate ContactNumber: {address.alternateContactNumber}\r\n      </p>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <td>Product ID</td>\r\n            <td>Product Name</td>\r\n            <td>Brand</td>\r\n            <td>Price</td>\r\n            <td>quantity</td>\r\n            <td>Total</td>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {products.length ? (\r\n            products.map((orderedProduct) => (\r\n              <OrderTable\r\n                key={orderedProduct.id}\r\n                product={orderedProduct}\r\n              ></OrderTable>\r\n            ))\r\n          ) : (\r\n            <h1>No products found</h1>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n      <h3>Grand total: {sessionStorage.getItem(\"grandTotal\")} &#8377;</h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderConfirmed;\r\n\r\nconst OrderTable = (props) => {\r\n  return (\r\n    <tr key={props.product.id}>\r\n      <td>{props.product.id}</td>\r\n      <td>{props.product.product.productname}</td>\r\n      <td>{props.product.product.brand}</td>\r\n      <td>{props.product.product.price}</td>\r\n      <td>{props.product.quantity}</td>\r\n      <td>{props.product.product.price * props.product.quantity}</td>\r\n    </tr>\r\n  );\r\n};\r\n","D:\\infostretch_shopmart\\shopping_mart\\src\\Components\\ApprovalComponent\\RequestTable.js",[],"D:\\infostretch_shopmart\\shopping_mart\\src\\Components\\ApprovalComponent\\TablePendingRequest.js",["178","179"],"import React, { useState } from \"react\";\r\nimport authService from \"../../services/auth.service\";\r\nimport userService from \"../../services/user.service\";\r\n\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport \"./../../Table.css\";\r\nimport form from \"react-validation/build/form\";\r\n\r\nconst TablePendingRequest = (props) => {\r\n  const [newQuant, setnewQuant] = useState(0);\r\n  const [successful, setsuccessful] = useState();\r\n  const [isDiclined, setIsDeclined] = useState();\r\n  const [checkBtn, setCheckBtn] = useState();\r\n  const [message, setmessage] = useState(\"\");\r\n\r\n  const UpdateQuantity = (e) => {\r\n    setnewQuant(e.target.value);\r\n  };\r\n\r\n  let list = [];\r\n\r\n  const sendRequestHandler = () => {\r\n    addRequest();\r\n  };\r\n\r\n  const declinHandler = () => {\r\n    userService\r\n      .deletePendingRequest(props.requestId)\r\n      .then(setIsDeclined(true))\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  function addRequest() {\r\n    if (newQuant !== 0) {\r\n      list = JSON.parse(localStorage.getItem(\"requestedSupplierId\")) || [];\r\n\r\n      console.log(\"retrived list in addrequest\" + list);\r\n      console.log(\"new quantity\" + newQuant);\r\n\r\n      list.push({\r\n        supplierId: authService.getCurrentUser().id,\r\n        productId: props.productId,\r\n        newQuant,\r\n        requestId: props.requestId,\r\n      });\r\n      console.log(\"after adding push list in addrequest\" + list);\r\n      localStorage.setItem(\"requestedSupplierId\", JSON.stringify(list));\r\n      setsuccessful(true);\r\n    } else {\r\n      setmessage(\"Quantity cannot be 0\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <tr key={props.key}>\r\n      <td>{props.requestId}</td>\r\n      <td>{props.productId}</td>\r\n      <td>{props.productname}</td>\r\n      {!successful ? (\r\n        <>\r\n          <td>\r\n            <Form>\r\n              <Input\r\n                required=\"true\"\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                onChange={UpdateQuantity}\r\n                value={newQuant}\r\n                placeholder=\"enter the quantity\"\r\n              ></Input>\r\n              <CheckButton\r\n                style={{ display: \"none\" }}\r\n                ref={(c) => {\r\n                  setCheckBtn(c);\r\n                }}\r\n              />\r\n            </Form>\r\n          </td>\r\n\r\n          <td>\r\n            <button\r\n              onClick={sendRequestHandler}\r\n              class=\"btn btn-success btn-lg float-right\"\r\n            >\r\n              approve\r\n            </button>\r\n          </td>\r\n\r\n          <td>\r\n            <button\r\n              onClick={declinHandler}\r\n              class=\"btn btn-danger btn-lg float-right\"\r\n            >\r\n              decline\r\n            </button>\r\n          </td>\r\n        </>\r\n      ) : null}\r\n      {successful ? (\r\n        <span className=\"alert alert-success\" role=\"alert\">\r\n          <p>\r\n            Request sent to Manager for approvalPlease wait will let u know by\r\n            email once request is approved\r\n          </p>\r\n        </span>\r\n      ) : isDiclined ? (\r\n        <span className=\"alert alert-danger\" role=\"alert\">\r\n          Request Declined\r\n          {window.location.reload()}\r\n        </span>\r\n      ) : (\r\n        <> {message} </>\r\n      )}\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default TablePendingRequest;\r\n","D:\\infostretch_shopmart\\shopping_mart\\src\\Components\\SignUpAsSupplier.js",[],{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","severity":1,"message":"185","line":2,"column":8,"nodeType":"186","messageId":"187","endLine":2,"endColumn":13},{"ruleId":"184","severity":1,"message":"188","line":3,"column":8,"nodeType":"186","messageId":"187","endLine":3,"endColumn":12},{"ruleId":"184","severity":1,"message":"189","line":18,"column":10,"nodeType":"186","messageId":"187","endLine":18,"endColumn":14},{"ruleId":"184","severity":1,"message":"190","line":18,"column":16,"nodeType":"186","messageId":"187","endLine":18,"endColumn":23},{"ruleId":"184","severity":1,"message":"191","line":2,"column":8,"nodeType":"186","messageId":"187","endLine":2,"endColumn":19},{"ruleId":"192","severity":1,"message":"193","line":51,"column":43,"nodeType":"194","messageId":"195","endLine":51,"endColumn":45},{"ruleId":"192","severity":1,"message":"193","line":75,"column":39,"nodeType":"194","messageId":"195","endLine":75,"endColumn":41},{"ruleId":"196","severity":1,"message":"197","line":22,"column":6,"nodeType":"198","endLine":22,"endColumn":8,"suggestions":"199"},{"ruleId":"184","severity":1,"message":"200","line":4,"column":8,"nodeType":"186","messageId":"187","endLine":4,"endColumn":19},{"ruleId":"184","severity":1,"message":"201","line":5,"column":8,"nodeType":"186","messageId":"187","endLine":5,"endColumn":27},{"ruleId":"184","severity":1,"message":"202","line":8,"column":10,"nodeType":"186","messageId":"187","endLine":8,"endColumn":20},{"ruleId":"184","severity":1,"message":"203","line":8,"column":22,"nodeType":"186","messageId":"187","endLine":8,"endColumn":35},{"ruleId":"192","severity":1,"message":"193","line":44,"column":25,"nodeType":"194","messageId":"195","endLine":44,"endColumn":27},{"ruleId":"192","severity":1,"message":"193","line":59,"column":25,"nodeType":"194","messageId":"195","endLine":59,"endColumn":27},{"ruleId":"184","severity":1,"message":"204","line":19,"column":20,"nodeType":"186","messageId":"187","endLine":19,"endColumn":31},{"ruleId":"192","severity":1,"message":"193","line":22,"column":38,"nodeType":"194","messageId":"195","endLine":22,"endColumn":40},{"ruleId":"192","severity":1,"message":"193","line":69,"column":21,"nodeType":"194","messageId":"195","endLine":69,"endColumn":23},{"ruleId":"205","severity":1,"message":"206","line":82,"column":11,"nodeType":"207","endLine":82,"endColumn":78},{"ruleId":"205","severity":1,"message":"206","line":111,"column":11,"nodeType":"207","endLine":115,"endColumn":13},{"ruleId":"184","severity":1,"message":"208","line":12,"column":10,"nodeType":"186","messageId":"187","endLine":12,"endColumn":20},{"ruleId":"209","severity":1,"message":"210","line":27,"column":5,"nodeType":"211","messageId":"212","endLine":44,"endColumn":6},{"ruleId":"184","severity":1,"message":"213","line":8,"column":10,"nodeType":"186","messageId":"187","endLine":8,"endColumn":14},{"ruleId":"192","severity":1,"message":"193","line":26,"column":38,"nodeType":"194","messageId":"195","endLine":26,"endColumn":40},{"ruleId":"214","severity":1,"message":"215","line":41,"column":28,"nodeType":"216","messageId":"217","endLine":41,"endColumn":30},{"ruleId":"192","severity":1,"message":"193","line":71,"column":38,"nodeType":"194","messageId":"195","endLine":71,"endColumn":40},{"ruleId":"192","severity":1,"message":"193","line":11,"column":38,"nodeType":"194","messageId":"195","endLine":11,"endColumn":40},{"ruleId":"184","severity":1,"message":"218","line":18,"column":17,"nodeType":"186","messageId":"187","endLine":18,"endColumn":27},{"ruleId":"184","severity":1,"message":"219","line":60,"column":9,"nodeType":"186","messageId":"187","endLine":60,"endColumn":23},{"ruleId":"184","severity":1,"message":"220","line":92,"column":9,"nodeType":"186","messageId":"187","endLine":92,"endColumn":16},{"ruleId":"192","severity":1,"message":"193","line":21,"column":16,"nodeType":"194","messageId":"195","endLine":21,"endColumn":18},{"ruleId":"184","severity":1,"message":"221","line":9,"column":10,"nodeType":"186","messageId":"187","endLine":9,"endColumn":20},{"ruleId":"184","severity":1,"message":"218","line":20,"column":15,"nodeType":"186","messageId":"187","endLine":20,"endColumn":25},{"ruleId":"184","severity":1,"message":"222","line":71,"column":10,"nodeType":"186","messageId":"187","endLine":71,"endColumn":25},{"ruleId":"184","severity":1,"message":"223","line":71,"column":27,"nodeType":"186","messageId":"187","endLine":71,"endColumn":45},{"ruleId":"184","severity":1,"message":"224","line":1,"column":17,"nodeType":"186","messageId":"187","endLine":1,"endColumn":25},{"ruleId":"184","severity":1,"message":"191","line":2,"column":8,"nodeType":"186","messageId":"187","endLine":2,"endColumn":19},{"ruleId":"184","severity":1,"message":"225","line":10,"column":8,"nodeType":"186","messageId":"187","endLine":10,"endColumn":12},{"ruleId":"184","severity":1,"message":"226","line":16,"column":10,"nodeType":"186","messageId":"187","endLine":16,"endColumn":18},"no-native-reassign",["227"],"no-negated-in-lhs",["228"],"no-unused-vars","'Input' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","'form' is assigned a value but never used.","'setForm' is assigned a value but never used.","'authService' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'profileDetails'. Either include it or remove the dependency array. You can also do a functional update 'setProfileDetails(p => ...)' if you only need 'profileDetails' in the 'setProfileDetails' call.","ArrayExpression",["229"],"'UserService' is defined but never used.","'TablePendingRequest' is defined but never used.","'successful' is assigned a value but never used.","'setsuccessful' is assigned a value but never used.","'setquantity' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'activeItem' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Link' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'resMessage' is assigned a value but never used.","'updateQuantity' is assigned a value but never used.","'history' is assigned a value but never used.","'setAddress' is assigned a value but never used.","'selectedAddress' is assigned a value but never used.","'setselectedAddress' is assigned a value but never used.","'useState' is defined but never used.","'form' is defined but never used.","'checkBtn' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"230","fix":"231"},"Update the dependencies array to be: [profileDetails]",{"range":"232","text":"233"},[593,595],"[profileDetails]"]